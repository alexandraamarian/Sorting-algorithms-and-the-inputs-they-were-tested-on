#include <stdio.h>
#include <time.h>
void merge(int arr[], int l, int m, int r)
{
    int i, j, k;
    int n1 = m - l + 1;
    int n2 = r - m;
    static int L[9999999], R[9999999];
    for (i = 0; i < n1; i++)
        L[i] = arr[l + i];
    for (j = 0; j < n2; j++)
        R[j] = arr[m + 1 + j];
    i = 0;
    j = 0;
    k = l;
    while (i < n1 && j < n2) {
        if (L[i] <= R[j]) {
            arr[k] = L[i];
            i++;
        }
        else {
            arr[k] = R[j];
            j++;
        }
        k++;
    }
    while (i < n1) {
        arr[k] = L[i];
        i++;
        k++;
    }
    while (j < n2) {
        arr[k] = R[j];
        j++;
        k++;
    }
}
void mergesort(int arr[], int l, int r)
{
    if (l < r) {
        int m = l + (r - l) / 2;
        mergesort(arr, l, m);
        mergesort(arr, m + 1, r);
        merge(arr, l, m, r);
    }
}
void printarray (int n, int array[])
{
    int i;
    for (i=0; i<n; i++)
        printf("%d ",array[i]);
    printf("\n");
}
int SortedCheck(int n, int a[])
{
    for (int i = 0; i < n; ++i)
    {
        if(a[n-1] < a[n-2])
            printf("Not sorted.");
    }
    printf("Sorted");
}
int main()
{
    int i=0;
    static int a[1000000];

    clock_t begin = clock();
    FILE* fptr;
    fptr = fopen("D:\\C\\c programms\\extralarge_similar_list.txt", "r");

    while (fscanf(fptr, "%d", &a[i]) == 1)
    {
        i++;
    }

    mergesort(a,1,i);
    fclose(fptr);
    clock_t end = clock();
    double time_spent = (double)(end - begin)/CLOCKS_PER_SEC;
    printarray(i,a);
    SortedCheck(i,a);

    printf("\nTotal time spent= %f sec",time_spent);


    return 0;
}
